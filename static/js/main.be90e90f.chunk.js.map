{"version":3,"sources":["utils/Helper.js","reducers/tileReducer.js","components/Tile/Tile.js","components/Grid/Grid.js","components/Board/Board.js","components/UILink/UILink.js","components/UI/UI.js","components/DifficultySelection/DifficultySelection.js","components/About/About.js","components/BackButton/BackButton.js","components/App/App.js","store.js","serviceWorker.js","index.js"],"names":["tileIcons","getRandomInt","min","max","Math","ceil","floor","random","getValue","values","length","initialState","tiles","matchedTiles","selectedTiles","difficulty","select","x","y","type","payload","resetState","tileReducer","state","action","selected","concat","filter","tile","value","matched","Tile","handleClick","className","onClick","icon","style","width","height","Grid","stateUpdated","selectAfterTimeout","useState","renderedContent","setRenderedContent","setStyle","prevSelected","setPrevSelected","useEffect","to","map","index","tileClass","includes","prev","slice","key","gridForDifficulty","i","toFixed","gridTemplateColumns","gridTemplateRows","mapDispatchToProps","initializeTiles","dispatch","uniqRandoms","indexOf","push","j","splice","timeout","setTimeout","connect","setStateUpdated","UILink","href","text","links","renderedLinks","link","name","difficultyList","About","svgSize","faGithub","faGlobeAmericas","withRouter","history","location","pathname","goBack","faArrowCircleLeft","App","library","add","faAmbulance","faAnchor","faBabyCarriage","faBath","faBed","faBeer","faBell","faBicycle","faBinoculars","faBomb","faBook","faBug","faBus","faCamera","faCandyCane","faCar","faCloud","faDrum","faFeather","faGuitar","faHeadphones","faHeart","faHelicopter","faKey","faLightbulb","faLock","faMoon","faRocket","faTv","faUmbrella","faStar","faWrench","browserHistory","exact","path","render","match","params","reducer","combineReducers","store","createStore","applyMiddleware","thunk","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.be90e90f.chunk.js","sourcesContent":["export const tileIcons = ['ambulance', 'anchor', 'baby-carriage', 'bath', 'bed', 'beer', 'bell', 'bicycle',\n  'binoculars', 'bomb', 'book', 'bug', 'bus', 'camera', 'candy-cane', 'car',\n  'cloud', 'drum', 'feather', 'guitar', 'headphones', 'heart', 'helicopter', 'key',\n  'lightbulb', 'lock', 'moon', 'rocket', 'tv', 'umbrella', 'star', 'wrench'];\n\nexport const getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport const getValue = (values) => {\n  const rand = getRandomInt(0, values.length - 1);\n  return values[rand];\n};\n","import { getRandomInt, getValue } from '../utils/Helper';\n\nexport const initialState = {\n  tiles: [],\n  matchedTiles: [],\n  selectedTiles: [],\n  difficulty: 2,\n};\n\nconst tileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'INIT_TILES':\n      return {\n        ...state,\n        difficulty: action.payload.difficulty,\n        tiles: action.payload.tiles,\n      };\n    case 'TILE_SELECTED': {\n      const selected = state.selectedTiles.concat(\n        state.tiles.filter((tile) => tile.x === action.payload.x && tile.y === action.payload.y),\n      );\n\n      if (selected.length === 2) {\n        if (selected[0].value === selected[1].value) {\n          const matched = state.matchedTiles.concat(selected);\n\n          if (matched.length === state.tiles.length) {\n            return {\n              ...state,\n              tiles: [],\n              selectedTiles: [],\n              matchedTiles: [],\n            };\n          }\n\n          return {\n            ...state,\n            matchedTiles: matched,\n            selectedTiles: [],\n          };\n        } if (action.payload.x === -1 && action.payload.y === -1) {\n          return {\n            ...state,\n            selectedTiles: [],\n          };\n        }\n        return {\n          ...state,\n          selectedTiles: selected,\n        };\n      } if (selected.length > 2) {\n        return {\n          ...state,\n          selectedTiles: [],\n        };\n      }\n      return {\n        ...state,\n        selectedTiles: selected,\n      };\n    }\n\n    case 'RESET_STATE':\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport const initializeTiles = (difficulty) => (dispatch) => {\n  const tiles = [];\n  let values = [];\n  const uniqRandoms = [];\n  let max;\n\n  if (difficulty <= 3 && difficulty >= 2) {\n    max = difficulty * 2;\n  } else {\n    max = 6;\n    difficulty = 3;\n  }\n\n  for (let i = 0; i < max * difficulty; i++) {\n    let random;\n\n    do {\n      // 31 - max index of tileIcons for icon names\n      random = getRandomInt(0, 31);\n    } while (uniqRandoms.indexOf(random) !== -1);\n\n    values.push(random);\n    uniqRandoms.push(random);\n  }\n\n  values = values.concat(values);\n  for (let i = 0; i < max; i++) {\n    for (let j = 0; j < max; j++) {\n      tiles.push({ x: i, y: j, value: getValue(values) });\n\n      values.splice(values.indexOf(tiles[tiles.length - 1].value), 1);\n    }\n  }\n\n  dispatch({\n    type: 'INIT_TILES',\n    payload: {\n      difficulty,\n      tiles,\n    },\n  });\n};\n\nexport const select = (x, y) => ({\n  type: 'TILE_SELECTED',\n  payload: {\n    x, y,\n  },\n});\n\nexport const selectAfterTimeout = (x, y, timeout) => (dispatch) => {\n  setTimeout(() => {\n    dispatch(select(x, y));\n  }, timeout);\n};\n\nexport const resetState = () => ({\n  type: 'RESET_STATE',\n});\n\nexport default tileReducer;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Tile.scss';\n\nconst Tile = ({ value, handleClick, className }) => {\n  const style = { width: '75px', height: '75px' };\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"block-backside\">\n        <div className=\"block\">\n          <FontAwesomeIcon icon={value} style={style} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Tile;\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Tile from '../Tile/Tile';\nimport './Grid.scss';\n\nexport const Grid = ({\n  tiles, matchedTiles, selectedTiles, difficulty, select, tileIcons,\n  stateUpdated, selectAfterTimeout,\n}) => {\n  const [renderedContent, setRenderedContent] = useState([]);\n  const [style, setStyle] = useState({});\n  const [prevSelected, setPrevSelected] = useState([]);\n\n  useEffect(() => {\n    setRenderedContent(\n      tiles.length === 0 && stateUpdated ? <Redirect to=\"/\" /> : tiles.map((tile, index) => {\n        let tileClass = (matchedTiles.includes(tile)\n          ? 'tile matched'\n          : (selectedTiles.includes(tile) ? 'tile selected'\n            : (prevSelected.includes(tile) ? 'tile to-hide' : 'tile')));\n\n        const handleClick = matchedTiles.includes(tile) || selectedTiles.includes(tile) ? () => { }\n          : () => {\n            select(tile.x, tile.y);\n            let prev = prevSelected.concat(tile);\n\n            if (prev.length > 2) {\n              prev = prev.slice(2);\n            }\n\n            setPrevSelected(prev);\n\n            if (prev.length === 2) {\n              if (prev[0].value !== prev[1].value) {\n                tileClass = 'tile to-hide';\n                selectAfterTimeout(-1, -1, 500);\n              }\n            }\n          };\n\n        return (\n          <Tile\n            key={tile.value * index + difficulty + index}\n            value={tileIcons[tile.value]}\n            handleClick={handleClick}\n            className={tileClass}\n          />\n        );\n      }),\n    );\n\n    let gridForDifficulty = '';\n\n    for (let i = 0; i < difficulty * 2; i++) {\n      gridForDifficulty += `${(100 / (difficulty * 2)).toFixed(2)}% `;\n    }\n\n    setStyle({\n      gridTemplateColumns: gridForDifficulty,\n      gridTemplateRows: gridForDifficulty,\n    });\n\n    return () => {\n      if (prevSelected.length >= 2) {\n        setPrevSelected([]);\n      }\n    };\n  // eslint-disable-next-line\n  }, [tiles, selectedTiles, matchedTiles]);\n\n\n  return (\n    <div className=\"tile-collection\" style={style}>\n      {renderedContent}\n    </div>\n  );\n};\n\nexport default Grid;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { select, initializeTiles, selectAfterTimeout } from '../../reducers/tileReducer';\nimport Grid from '../Grid/Grid';\nimport './Board.scss';\n\nexport const Board = ({\n  tiles, matchedTiles, selectedTiles, difficulty, select,\n  initializeTiles, tileIcons, selectAfterTimeout,\n}) => {\n  const [stateUpdated, setStateUpdated] = useState(false);\n\n  useEffect(() => {\n    initializeTiles(difficulty);\n    setStateUpdated(true);\n  }, [difficulty, initializeTiles]);\n\n  return (\n    <div className=\"board\">\n      <Grid\n        stateUpdated={stateUpdated}\n        tiles={tiles}\n        matchedTiles={matchedTiles}\n        selectedTiles={selectedTiles}\n        select={select}\n        difficulty={difficulty}\n        tileIcons={tileIcons}\n        selectAfterTimeout={selectAfterTimeout}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  state = state.tileReducer;\n  return {\n    tiles: state.tiles,\n    matchedTiles: state.matchedTiles,\n    selectedTiles: state.selectedTiles,\n  };\n};\n\nconst mapDispatchToProps = {\n  select,\n  initializeTiles,\n  selectAfterTimeout,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './UILink.scss';\n\nconst UILink = ({ href, text, className }) => (\n  <div className={`ui-link ${className}`}>\n    <Link to={href}>\n      {text}\n    </Link>\n  </div>\n);\n\nexport default UILink;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { resetState } from '../../reducers/tileReducer';\nimport UILink from '../UILink/UILink';\nimport './UI.scss';\n\nexport const UI = ({ links, resetState }) => {\n  useEffect(() => {\n    resetState();\n  }, [resetState]);\n\n  const renderedLinks = links.map((link) => (<UILink key={link.href.length * link.name.length} href={link.href} className=\"link-style\" text={link.name} />));\n\n  return (\n    <div className=\"ui\">\n      <h1>Tile Matching Game</h1>\n      <h2>Goal: match all tile-icons</h2>\n      {renderedLinks}\n    </div>\n  );\n};\n\nexport default connect(null, { resetState })(UI);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { resetState } from '../../reducers/tileReducer';\nimport UILink from '../UILink/UILink';\nimport './DifficultySelection.scss';\n\nexport const DifficultySelection = ({ difficultyList, resetState }) => {\n  useEffect(() => {\n    resetState();\n  }, [resetState]);\n\n  const renderedLinks = difficultyList.map((difficulty, index) => (\n    <UILink\n      key={difficulty.value * difficulty.name.length + index}\n      href={`/game/${difficulty.value}`}\n      text={difficulty.name}\n      className=\"link-style\"\n    />\n  ));\n\n\n  return (\n    <div className=\"difficulty-select\">\n      {renderedLinks}\n    </div>\n  );\n};\n\nexport default connect(null, { resetState })(DifficultySelection);\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faGlobeAmericas } from '@fortawesome/free-solid-svg-icons';\nimport './About.scss';\n\nconst About = () => {\n  const svgSize = { width: '2rem', height: '2rem' };\n\n  return (\n    <div className=\"about-wrapper\">\n      <header className=\"about-header\">\n        <h1>Tile matching game.</h1>\n      </header>\n      <section className=\"about-content\">\n        <p>by Arc</p>\n        <div className=\"about-socials\">\n          <span className=\"github\">\n            <a href=\"https://github.com/arcbjorn\">\n              <FontAwesomeIcon icon={faGithub} style={svgSize} />\n            </a>\n          </span>\n          <span className=\"linkedin\">\n            <a href=\"https://arcbjorn.github.io\">\n              <FontAwesomeIcon icon={faGlobeAmericas} style={svgSize} />\n            </a>\n          </span>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowCircleLeft } from '@fortawesome/free-solid-svg-icons';\nimport './BackButton.scss';\n\nexport const BackButton = ({ history, location }) => (\n  <div className=\"back-button\">\n    {\n      location.pathname === '/'\n        ? <></>\n        : (\n          <button type=\"button\" onClick={() => history.goBack()}>\n            <FontAwesomeIcon icon={faArrowCircleLeft} style={{ width: '7rem', height: '7rem' }} />\n          </button>\n        )\n    }\n\n  </div>\n);\n\nexport default withRouter(BackButton);\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faAmbulance, faAnchor, faBabyCarriage, faBath, faBed, faBeer, faBell, faBicycle,\n  faBinoculars, faBomb, faBook, faBug, faBus, faCamera, faCandyCane, faCar,\n  faCloud, faDrum, faFeather, faGuitar, faHeadphones, faHeart, faHelicopter, faKey,\n  faLightbulb, faLock, faMoon, faRocket, faTv, faUmbrella, faStar, faWrench,\n} from '@fortawesome/free-solid-svg-icons';\nimport Board from '../Board/Board';\nimport UI from '../UI/UI';\nimport DifficultySelection from '../DifficultySelection/DifficultySelection';\nimport About from '../About/About';\nimport BackButton from '../BackButton/BackButton';\nimport { tileIcons } from '../../utils/Helper';\nimport './App.scss';\n\nconst App = ({ history = null }) => {\n  library.add(faAmbulance, faAnchor, faBabyCarriage, faBath, faBed, faBeer, faBell, faBicycle,\n    faBinoculars, faBomb, faBook, faBug, faBus, faCamera, faCandyCane, faCar,\n    faCloud, faDrum, faFeather, faGuitar, faHeadphones, faHeart, faHelicopter, faKey,\n    faLightbulb, faLock, faMoon, faRocket, faTv, faUmbrella, faStar, faWrench);\n\n  const links = [{ href: '/game/difficulty/choose', name: ' · Play! · ' }, { href: '/about', name: ' · About the game · ' }];\n  const difficultyList = [{ value: 2, name: ' · Normal difficulty · ' }, { value: 3, name: ' · Test yourself! · ' }];\n\n  return (\n    <div className=\"app\">\n      <Router>\n        <BackButton browserHistory={history} />\n        <Route exact path=\"/\" render={() => <UI links={links} />} />\n        <Route exact path=\"/game/:difficulty\" render={({ match }) => <Board difficulty={match.params.difficulty} tileIcons={tileIcons} />} />\n        <Route exact path=\"/game/difficulty/choose\" render={() => <DifficultySelection difficultyList={difficultyList} />} />\n        <Route path=\"/about\" render={() => <About />} />\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport tileReducer from './reducers/tileReducer';\n\n// combineReducers is used to fix the \"undefined initial state\" bug\nconst reducer = combineReducers({\n  tileReducer,\n});\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nexport default store;\n","/* eslint-disable no-use-before-define */\n/* eslint-disable no-undef */\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n  // [::1] is the IPv6 localhost address.\n  || window.location.hostname === '[::1]'\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  || window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n            + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all '\n                + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl)\n    .then((response) => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.scss';\nimport App from './components/App/App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}